
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  namespace: todo-namespace
  name: todo-app-dep
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todo-app
  strategy:
    canary:
      steps:
      - setWeight: 50
      - analysis:
          templates:
          - templateName: cpu-usage
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      volumes:
        - name: image-volume
          persistentVolumeClaim:
            claimName: image-claim
      containers:
        - name: todo-app
          image: gcr.io/PROJECT/BACKEND
          resources:
            limits:
              cpu: "150m"
              memory: "50Mi"
          volumeMounts:
          - name: image-volume
            mountPath: /shared/image
          env:
          - name: IMAGE_DIR
            value: "/shared/image"
          - name: POSTGRES
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: postgres-host
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-password-fd8httt8gd
                key: POSTGRES_PASSWORD
          - name: NATS_URL
            value: nats://my-nats.default.svc.cluster.local:4222
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
               path: /health
               port: 3000
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            httpGet:
               path: /health
               port: 3000
        - name: broadcaster
          image: gcr.io/PROJECT/BROADCASTER
          resources:
            limits:
              cpu: "150m"
              memory: "50Mi"
          env:
          - name: NATS_URL
            value: nats://my-nats.default.svc.cluster.local:4222
          - name: WEBHOOK_URL
            value: https://nats.requestcatcher.com/test
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
               path: /health
               port: 3000
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            httpGet:
               path: /health
               port: 3000
